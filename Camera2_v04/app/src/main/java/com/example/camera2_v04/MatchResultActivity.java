package com.example.camera2_v04;

import androidx.appcompat.app.AppCompatActivity;

import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

import java.io.FileNotFoundException;

public class MatchResultActivity extends AppCompatActivity {

    float[] new_face_embedding;
    double person_distance;
    PersonFile[] personArray;
    String[] match_names;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_match_result);

        ListView listView = (ListView) findViewById(R.id.resultListView);

        match_names = new String[1];
        match_names[0] = "Ningu√©m encontrado";

        Bundle extras = getIntent().getExtras();
        if (extras != null) {
            new_face_embedding = extras.getFloatArray("vector_embedding");
        }

        personArray = new PersonFile[1];
        personArray[0] = new PersonFile("Alexandre Ciuffatelli", new float[]{
                0.02445f, 0.06945f, 0.10397f, -0.03266f, 0.00765f, 0.02254f, -0.04376f, -0.04091f, -0.00971f, -0.04160f, 0.02689f, -0.03694f, 0.03674f, 0.03719f, 0.00765f, -0.00565f, -0.05067f, 0.01727f, -0.06345f, -0.00099f, 0.00362f, -0.02516f, 0.01938f, 0.07532f, 0.05133f, -0.01650f, -0.01711f, 0.01062f, 0.00634f, -0.05179f, 0.01781f, 0.00837f, -0.00145f, 0.02527f, 0.07811f, 0.14274f, 0.06681f, 0.03207f, -0.03480f, -0.00078f, 0.05804f, 0.00822f, 0.03461f, -0.06377f, -0.01850f, -0.02238f, -0.01306f, 0.03595f, 0.00229f, -0.01142f, 0.01678f, -0.03515f, -0.02136f, 0.05294f, 0.08354f, 0.01137f, -0.00524f, 0.00194f, 0.05151f, -0.02612f, 0.06709f, -0.03541f, 0.04646f, -0.00749f, 0.06474f, -0.06318f, 0.03325f, 0.06432f, 0.05168f, 0.10486f, 0.03987f, 0.02295f, -0.05940f, -0.01810f, 0.07675f, -0.09205f, -0.05658f, 0.11702f, 0.01740f, -0.00951f, 0.05358f, 0.03694f, -0.01138f, 0.01330f, -0.02084f, 0.03464f, 0.07219f, 0.01707f, 0.03769f, 0.04506f, 0.02542f, 0.05805f, -0.06748f, -0.00546f, -0.02458f, -0.05358f, 0.05192f, 0.00886f, 0.02093f, -0.03036f, -0.00177f, -0.00450f, -0.08469f, -0.02864f, -0.04436f, 0.02770f, 0.06162f, 0.01464f, 0.00298f, 0.08068f, -0.02671f, 0.02296f, 0.07598f, 0.03413f, 0.01748f, 0.01107f, 0.02752f, -0.05048f, -0.05749f, -0.04030f, -0.02676f, 0.01637f, -0.04609f, -0.00825f, -0.00091f, 0.06717f, -0.02085f, 0.00440f, -0.02648f, 0.04449f, 0.05230f, -0.00094f, -0.03868f, -0.00137f, 0.05859f, -0.00518f, 0.02051f, 0.03656f, -0.07653f, -0.05256f, 0.03305f, -0.07772f, 0.06825f, -0.01066f, -0.03870f, -0.00246f, 0.02292f, 0.03643f, 0.01565f, -0.08979f, 0.00120f, -0.07663f, -0.03081f, -0.00405f, -0.06134f, -0.00459f, -0.03627f, -0.01802f, -0.02623f, -0.00825f, -0.08512f, 0.01984f, 0.02784f, -0.01582f, -0.05986f, -0.05377f, -0.06514f, -0.02389f, 0.00353f, -0.04118f, -0.01907f, -0.09037f, -0.04039f, 0.03930f, 0.06641f, 0.02023f, 0.04567f, 0.04828f, -0.06644f, -0.01127f, -0.03371f, 0.01139f, 0.01757f, -0.00957f, 0.05166f, 0.00847f, 0.01886f, 0.01321f, 0.01266f, 0.00873f, -0.01024f, 0.03586f, -0.02163f, -0.00007f, -0.05329f, -0.00253f, -0.06093f, -0.03083f, 0.02957f, 0.00692f, -0.04380f, -0.00334f, 0.00137f, 0.07259f, 0.03016f, -0.06758f, -0.04885f, 0.05471f, 0.01479f, -0.01982f, -0.07374f, -0.04463f, 0.00054f, 0.00596f, -0.00929f, 0.03764f, 0.05115f, 0.03025f, -0.00625f, 0.01186f, -0.03549f, 0.00102f, -0.07812f, 0.03471f, -0.03983f, 0.04674f, -0.04791f, 0.04870f, -0.02640f, -0.07000f, -0.00448f, 0.00972f, 0.03079f, -0.00494f, 0.10323f, -0.04474f, -0.04783f, 0.04741f, 0.04141f, 0.01116f, -0.06065f, 0.03974f, 0.01722f, 0.00807f, 0.03305f, -0.05482f, 0.05871f, -0.03464f, 0.01123f, 0.02155f, 0.04186f, -0.06226f, -0.05842f, -0.01180f, 0.01046f, -0.01251f, -0.00046f, 0.02561f, -0.03674f, 0.06037f, -0.00014f, -0.05104f, 0.00525f, -0.08131f, -0.01045f, -0.10177f, 0.00247f, 0.11198f, 0.06006f, 0.04014f, 0.05060f, -0.01435f, -0.01978f, -0.01269f, -0.00978f, -0.05874f, 0.02362f, -0.00517f, 0.05181f, 0.00758f, -0.03510f, -0.04912f, -0.00235f, 0.03122f, 0.06178f, -0.01299f, -0.00121f, -0.00411f, 0.01252f, -0.04192f, 0.01249f, 0.03196f, 0.00018f, 0.00136f, 0.05091f, 0.01807f, 0.03858f, 0.08189f, -0.04654f, -0.05763f, 0.01509f, -0.00526f, -0.02849f, 0.05498f, 0.06951f, -0.02242f, 0.01734f, -0.02429f, 0.05256f, 0.05174f, 0.02735f, 0.01060f, 0.00696f, 0.11491f, 0.05261f, 0.00366f, 0.01938f, -0.01440f, -0.07873f, 0.02276f, -0.00615f, -0.05590f, 0.01548f, 0.03301f, -0.04286f, 0.02648f, -0.05356f, 0.03015f, 0.04827f, -0.02466f, -0.01286f, -0.06712f, 0.04888f, -0.11789f, 0.03815f, -0.00059f, 0.01616f, 0.06617f, -0.02239f, 0.04815f, -0.06714f, -0.02381f, -0.09383f, -0.02467f, 0.08240f, 0.04012f, -0.04318f, 0.06898f, 0.06292f, -0.02185f, 0.05174f, -0.02227f, 0.00476f, 0.08571f, -0.03720f, -0.01422f, -0.06114f, -0.00418f, 0.06150f, 0.03686f, 0.01507f, -0.01843f, -0.01098f, -0.04484f, -0.06852f, -0.01149f, -0.00820f, 0.01882f, 0.02653f, -0.00306f, 0.00618f, -0.03726f, -0.04240f, -0.02070f, 0.02965f, 0.01312f, 0.05148f, -0.05612f, 0.02863f, 0.07741f, 0.06807f, 0.01817f, -0.00328f, 0.00488f, 0.01708f, -0.03769f, -0.06882f, 0.03049f, 0.04743f, 0.03324f, -0.07092f, 0.02233f, 0.01977f, 0.04547f, -0.08763f, -0.04993f, 0.00941f, 0.00847f, 0.00510f, 0.05811f, -0.01384f, 0.04083f, 0.05456f, -0.08145f, 0.07038f, -0.01996f, 0.00792f, -0.00857f, 0.05277f, 0.07188f, 0.03391f, 0.02174f, -0.00873f, 0.05333f, 0.00859f, -0.08281f, -0.03233f, -0.01637f, -0.01456f, -0.02035f, -0.02318f, -0.01238f, -0.08280f, -0.00666f, 0.00929f, 0.03539f, 0.04169f, -0.06805f, -0.07195f, 0.00332f, 0.03961f, 0.05299f, -0.03245f, -0.03486f, 0.03087f, 0.08104f, -0.04921f, 0.00073f, -0.03437f, -0.01805f, 0.06284f, -0.02891f, 0.01501f, -0.03527f, -0.00630f, -0.03397f, -0.05647f, 0.07353f, 0.03501f, 0.05683f, 0.03247f, -0.08458f, -0.00762f, 0.02746f, 0.03647f, 0.07510f, -0.01162f, -0.02134f, -0.00161f, -0.07893f, -0.05937f, -0.01609f, 0.01192f, 0.04780f, -0.00854f, -0.02654f, 0.05650f, -0.01693f, -0.07811f, 0.07786f, 0.00882f, -0.04420f, -0.06349f, -0.01767f, 0.00399f, 0.00068f, 0.03233f, 0.02163f, -0.03176f, -0.01773f, 0.05415f, 0.03188f, -0.04406f, -0.02963f, -0.06339f, -0.04123f, 0.13650f, 0.01179f, 0.03026f, 0.00644f, -0.04205f, 0.00987f, 0.02068f, 0.04410f, -0.04582f, -0.00917f, -0.09135f, 0.09576f, -0.03711f, 0.00688f, -0.00130f, -0.03230f, 0.04808f, -0.07317f, 0.00055f, -0.08705f, -0.03131f, -0.01465f, 0.04377f, -0.00999f, 0.07802f, 0.06362f
        });

        for (int i = 0; i < personArray.length; i++) {
            person_distance = calculateDistance(new_face_embedding, personArray[0].getEmbedding());

            if (person_distance < 1) {
                match_names[0] = personArray[0].getName();
            }
        }

        ArrayAdapter adapter = new ArrayAdapter<String>(this, R.layout.match_list, match_names);
        listView.setAdapter(adapter);

    }

    private double calculateDistance(float[] a, float[] b) {
        double diff_square_sum = 0;
        for (int i = 0; i < a.length; i++) {
            diff_square_sum += (a[i] - b[i]) * (a[i] - b[i]);
        }
        return Math.sqrt(diff_square_sum);
    }
}